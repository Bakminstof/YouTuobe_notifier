version: '3.4'

services:
  youtube_notifier_bot:
    container_name: youtube_notifier_bot_container
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    #          loki-url: "http://host.docker.internal:3100/loki/api/v1/push"
    volumes:
      - ./bot/logging_data/logs:/bot/logging_data/logs
    environment:
      - ENV_FILE=prod.env
    expose:
      - "4000"
    command:
      - "python"
      - "main.py"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network

  grafana:
    container_name: grafana_container
    build:
      context: ./grafana
      dockerfile: Dockerfile
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=True
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - "3000:3000"
    depends_on:
      - youtube_notifier_bot
    networks:
      - network

  loki:
    container_name: loki_container
    build:
      context: ./loki
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3100:3100"
    depends_on:
      - youtube_notifier_bot
    networks:
      - network

  postgres:
    container_name: postgres_container
    build:
      context: ./postgres
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./postgres/pg.env
    ports:
      - '2000:2000'
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      - ./postgres/backup:/var/lib/postgresql/backup
      - ./postgres/backup_scripts:/var/lib/postgresql/backup_scripts
      - ./postgres/config/:/var/lib/PostgresConfig/
    command:
      - "postgres"
      - "-c"
      - "config_file=/var/lib/PostgresConfig/postgresql.conf"
    networks:
      - network
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "postges", "-p", "2000", "-h", "0.0.0.0" ]
      interval: 5s
      timeout: 10s
      retries: 4
      start_period: 10s

  nginx:
    container_name: nginx_container
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./bot/TLS:/etc/nginx/TLS
    ports:
      - "8443:8443"
    networks:
      - network
    depends_on:
      - youtube_notifier_bot

networks:
  network:
    driver: bridge
